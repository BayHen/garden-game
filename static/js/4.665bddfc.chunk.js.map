{"version":3,"sources":["components/Garden/Coin.js","components/Garden/PlantImage.js","components/Garden/Timer.js","components/Garden/GardenItem.js","components/Garden/Garden.js"],"names":["url","window","location","href","Coin","plantStatus","sale","src","className","PlantImage","plant","plantOpacity","isEmptyObject","Timer","timer","pathSound","soundRemovePlant","Audio","soundPlantGrow","soundCoin","soundDiamond","soundTreeFood","soundWateringCan","soundBugSpray","soundPhonograph","soundPause","memo","choosePlant","setPlant","deletePlant","tool","coinBankVal","setCoinBankVal","costTreeFood","costWateringCan","useState","setPlantOpacity","setPlantStatus","setTimer","isPlanted","setIsPlanted","numberOfHarvest","setNumberOfHarvest","useEffect","load","play","handleDeletePlantAndSetDefaultState","setTime","setInterval","clearInterval","handleInteractWithPlant","salePrice","onClick","onMouseEnter","image2","onMouseLeave","plants","map","index"],"mappings":"iJAEMA,EAAMC,OAAOC,SAASC,KAEb,SAASC,EAAT,GAAsC,IAAtBC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KAC1C,OACE,8BACkB,GAAfD,GACC,qBACEE,IACEP,EAAG,+BAEDM,GAAQ,IAAMA,EAAO,GACjB,SACAA,GAAQ,IAAMA,EAAO,IACrB,OACA,UANH,QASLE,UAAU,oB,WChBL,SAASC,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,MAAOL,EAA6B,EAA7BA,YAAaM,EAAgB,EAAhBA,aACvD,OACE,sBAAKH,UAAU,kBAAf,UACE,qBAAKD,IAAKG,EAAM,QAAD,OAASL,EAAc,MACrCO,YAAcF,IACb,qBAAKF,UAAU,0BAA0BD,IAAKI,OCNvC,SAASE,EAAT,GAAwC,IAAvBR,EAAsB,EAAtBA,YAAaS,EAAS,EAATA,MAC3C,OACE,qBACEN,UAAS,8BACS,IAAhBH,EAAoB,cAAgB,IAFxC,SAKGS,ICJP,IAAMC,EAAYd,OAAOC,SAASC,KAAO,kBACnCa,EAAmB,IAAIC,MAAMF,EAAY,aACzCG,EAAiB,IAAID,MAAMF,EAAY,kBACvCI,EAAY,IAAIF,MAAMF,EAAY,YAClCK,EAAe,IAAIH,MAAMF,EAAY,eACrCM,EAAgB,IAAIJ,MAAMF,EAAY,iBACtCO,EAAmB,IAAIL,MAAMF,EAAY,oBACzCQ,EAAgB,IAAIN,MAAMF,EAAY,iBACtCS,EAAkB,IAAIP,MAAMF,EAAY,kBACxCU,EAAa,IAAIR,MAAMF,EAAY,aAM1BW,kBAAK,YAUhB,IATFhB,EASC,EATDA,MACAiB,EAQC,EARDA,YACAC,EAOC,EAPDA,SACAC,EAMC,EANDA,YACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAEA,EAAwCC,mBAAS,MAAjD,mBAAOxB,EAAP,KAAqByB,EAArB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO9B,EAAP,KAAoBgC,EAApB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOrB,EAAP,KAAcwB,EAAd,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA8CL,mBAAS,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KAIAC,qBAAU,WACR,GAAIJ,EAAW,CAeb,GAdoB,IAAhBlC,IACFgC,EAAe,GACfK,EAAmBD,EAAkB,GACrCH,EAAQ,OAAC5B,QAAD,IAACA,OAAD,EAACA,EAAOI,QAEE,IAAhBT,IAAgC,IAAXS,IACvBI,EAAe0B,OACf1B,EAAe2B,SAEF,IAAX/B,IAEFuB,EAAehC,EAAc,GAC7BiC,EAAQ,OAAC5B,QAAD,IAACA,OAAD,EAACA,EAAOI,QAEM,IAApB2B,EAEF,YADAK,IAIF,IAAMC,EAAUC,aAAY,WAC1BV,EAASxB,EAAQ,KAChB,KACH,OAAO,WACLmC,cAAcF,OAGjB,CAACjC,IAEJ,IAAMgC,EAAsC,WAC1CjB,IACAO,EAAgB,MAChBC,EAAe,GACfC,EAAS,MACTE,GAAa,GACbE,EAAmB,IAGfQ,EAA0B,WAC9B,GAAa,OAATpB,EAAe,CAEjB,GAAIH,IAAgBY,GAAaR,IAAW,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAawB,WAK3D,OAJAd,EAAe,GACfG,GAAa,GACbF,EAAQ,OAACX,QAAD,IAACA,OAAD,EAACA,EAAab,YACtBc,IAIF,IAAKD,GAA+B,IAAhBtB,EAclB,OAbIC,GAAQ,KACVc,EAAawB,OACbxB,EAAayB,SAEb1B,EAAUyB,OACVzB,EAAU0B,QAEZb,EACED,GAAW,OAAGrB,QAAH,IAAGA,OAAH,EAAGA,EAAOyC,WAAYpB,GAAW,OAAGrB,QAAH,IAAGA,OAAH,EAAGA,EAAOyC,WAAY,GAEpEd,EAAe,GACfK,EAAmBD,EAAkB,QACrCH,EAAQ,OAAC5B,QAAD,IAACA,OAAD,EAACA,EAAOI,OAIpB,GAAIyB,EACF,OAAQT,GACN,IAAK,SACHd,EAAiB4B,OACjB5B,EAAiB6B,OACjBC,IACA,MACF,IAAK,YACgB,GAAfzC,GAAoB0B,GAAeE,IACrCZ,EAAcuB,OACdvB,EAAcwB,OACdb,EACED,EAAcE,EAAeF,EAAcE,EAAe,GAE5DK,EAASxB,EApFE,KAqFQA,IACjBuB,EAAehC,EAAc,GAC7BiC,EAAQ,OAAC5B,QAAD,IAACA,OAAD,EAACA,EAAOI,SAGpB,MACF,IAAK,eACgB,GAAfT,GAAoB0B,GAAeG,IACrCZ,EAAiBsB,OACjBtB,EAAiBuB,OACjBb,EACED,EAAcG,EAAkBH,EAAcG,EAAkB,GAElEI,EAASxB,EAjGK,KAkGQA,IACpBuB,EAAehC,EAAc,GAC7BiC,EAAQ,OAAC5B,QAAD,IAACA,OAAD,EAACA,EAAOI,SAGpB,MACF,IAAK,YACHS,EAAcqB,OACdrB,EAAcsB,OACd,MACF,IAAK,aACHrB,EAAgBoB,OAChBpB,EAAgBqB,YAnIxBpB,EAAWmB,OACXnB,EAAWoB,QA0ILvC,EAAI,OAAGI,QAAH,IAAGA,OAAH,EAAGA,EAAOyC,UAEpB,OACE,qBACE3C,UAAU,iBACV4C,QAAS,kBAAMF,KACfG,aAAc,WACZjB,EAAe,OAACT,QAAD,IAACA,OAAD,EAACA,EAAa2B,SAE/BC,aAAc,WACZnB,EAAgB,OAPpB,SAUG1B,GACC,eAAC,WAAD,WACE,cAACD,EAAD,CACEC,MAAOA,EACPL,YAAaA,EACbM,aAAcA,IAEf4B,GACC,qCACE,cAAC1B,EAAD,CAAOR,YAAaA,EAAaS,MAAOA,IACxC,cAACV,EAAD,CAAMC,YAAaA,EAAaC,KAAMA,eC/KrCoB,0BAAK,YAUhB,IATF8B,EASC,EATDA,OACA7B,EAQC,EARDA,YACAC,EAOC,EAPDA,SACAC,EAMC,EANDA,YACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAGA,OACE,qBAAK1B,UAAU,YAAf,SACGgD,EAAOC,KAAI,SAAC/C,EAAOgD,GAAR,OACV,cAAC,EAAD,CAEEhD,MAAOA,EACPiB,YAAaA,EACbC,SAAU,kBAAMA,EAAS8B,IACzB7B,YAAa,kBAAMA,EAAY6B,IAC/B5B,KAAMA,EACNC,YAAaA,EACbC,eAAgBA,EAChBC,aAAcA,EACdC,gBAAiBA,GATZwB","file":"static/js/4.665bddfc.chunk.js","sourcesContent":["import React from \"react\";\r\n//\r\nconst url = window.location.href;\r\n//\r\nexport default function Coin({ plantStatus, sale }) {\r\n  return (\r\n    <div>\r\n      {plantStatus == 2 && (\r\n        <img\r\n          src={\r\n            url +\r\n            `/assets/images/coins/${\r\n              sale >= 25 && sale < 50\r\n                ? \"silver\"\r\n                : sale >= 50 && sale < 100\r\n                ? \"gold\"\r\n                : \"diamond\"\r\n            }.gif`\r\n          }\r\n          className=\"gd-coin-image\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { isEmptyObject } from \"../../helpers/commonFunctions\";\r\n//\r\nexport default function PlantImage({ plant, plantStatus, plantOpacity }) {\r\n  return (\r\n    <div className=\"gd-garden-image\">\r\n      <img src={plant[`image${plantStatus + 1}`]} />\r\n      {isEmptyObject(plant) && (\r\n        <img className=\"gd-garden-image-opacity\" src={plantOpacity} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n//\r\nexport default function Timer({ plantStatus, timer }) {\r\n  return (\r\n    <div\r\n      className={`gd-garden-item-timer${\r\n        plantStatus === 2 ? \" over-timer\" : \"\"\r\n      }`}\r\n    >\r\n      {timer}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment, memo, useEffect, useState } from \"react\";\r\nimport Coin from \"./Coin\";\r\nimport PlantImage from \"./PlantImage\";\r\nimport Timer from \"./Timer\";\r\n//\r\nconst pathSound = window.location.href + \"/assets/sounds/\";\r\nconst soundRemovePlant = new Audio(pathSound + \"plant.ogg\");\r\nconst soundPlantGrow = new Audio(pathSound + \"plant-grow.ogg\");\r\nconst soundCoin = new Audio(pathSound + \"coin.ogg\");\r\nconst soundDiamond = new Audio(pathSound + \"diamond.wav\");\r\nconst soundTreeFood = new Audio(pathSound + \"tree-food.ogg\");\r\nconst soundWateringCan = new Audio(pathSound + \"watering-can.ogg\");\r\nconst soundBugSpray = new Audio(pathSound + \"bug-spray.ogg\");\r\nconst soundPhonograph = new Audio(pathSound + \"phonograph.ogg\");\r\nconst soundPause = new Audio(pathSound + \"pause.ogg\");\r\nconst playSoundPause = () => {\r\n  soundPause.load();\r\n  soundPause.play();\r\n};\r\n//\r\nexport default memo(function GardenItem({\r\n  plant,\r\n  choosePlant,\r\n  setPlant,\r\n  deletePlant,\r\n  tool,\r\n  coinBankVal,\r\n  setCoinBankVal,\r\n  costTreeFood,\r\n  costWateringCan,\r\n}) {\r\n  const [plantOpacity, setPlantOpacity] = useState(null);\r\n  const [plantStatus, setPlantStatus] = useState(0); // 0: Seed, 1: Can't harvested, 2: Can harvested\r\n  const [timer, setTimer] = useState(0);\r\n  const [isPlanted, setIsPlanted] = useState(false);\r\n  const [numberOfHarvest, setNumberOfHarvest] = useState(0);\r\n  const timeTreeFood = 3;\r\n  const timeWateringCan = 1;\r\n  //\r\n  useEffect(() => {\r\n    if (isPlanted) {\r\n      if (plantStatus === 3) {\r\n        setPlantStatus(1);\r\n        setNumberOfHarvest(numberOfHarvest + 1);\r\n        setTimer(plant?.timer);\r\n      }\r\n      if (plantStatus === 1 && timer === -1) {\r\n        soundPlantGrow.load();\r\n        soundPlantGrow.play();\r\n      }\r\n      if (timer === -1) {\r\n        //Plant status increase\r\n        setPlantStatus(plantStatus + 1);\r\n        setTimer(plant?.timer);\r\n      }\r\n      if (numberOfHarvest === 3) {\r\n        handleDeletePlantAndSetDefaultState();\r\n        return;\r\n      }\r\n      //Plating\r\n      const setTime = setInterval(() => {\r\n        setTimer(timer - 1);\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(setTime);\r\n      };\r\n    }\r\n  }, [timer]);\r\n  //\r\n  const handleDeletePlantAndSetDefaultState = () => {\r\n    deletePlant();\r\n    setPlantOpacity(null);\r\n    setPlantStatus(0);\r\n    setTimer(null);\r\n    setIsPlanted(false);\r\n    setNumberOfHarvest(0);\r\n  };\r\n  //\r\n  const handleInteractWithPlant = () => {\r\n    if (tool === null) {\r\n      //Plant a tree\r\n      if (choosePlant && !isPlanted && coinBankVal >= choosePlant?.salePrice) {\r\n        setPlantStatus(0);\r\n        setIsPlanted(true);\r\n        setTimer(choosePlant?.timer);\r\n        setPlant();\r\n        return;\r\n      }\r\n      //Harvest plant\r\n      if (!choosePlant && plantStatus === 2) {\r\n        if (sale >= 100) {\r\n          soundDiamond.load();\r\n          soundDiamond.play();\r\n        } else {\r\n          soundCoin.load();\r\n          soundCoin.play();\r\n        }\r\n        setCoinBankVal(\r\n          coinBankVal + plant?.salePrice ? coinBankVal + plant?.salePrice : 0\r\n        );\r\n        setPlantStatus(1);\r\n        setNumberOfHarvest(numberOfHarvest + 1);\r\n        setTimer(plant?.timer);\r\n        return;\r\n      }\r\n    }\r\n    if (isPlanted) {\r\n      switch (tool) {\r\n        case \"shovel\":\r\n          soundRemovePlant.load();\r\n          soundRemovePlant.play();\r\n          handleDeletePlantAndSetDefaultState();\r\n          break;\r\n        case \"tree-food\":\r\n          if (plantStatus != 2 && coinBankVal >= costTreeFood) {\r\n            soundTreeFood.load();\r\n            soundTreeFood.play();\r\n            setCoinBankVal(\r\n              coinBankVal - costTreeFood ? coinBankVal - costTreeFood : 0\r\n            );\r\n            setTimer(timer - timeTreeFood);\r\n            if (timeTreeFood > timer) {\r\n              setPlantStatus(plantStatus + 1);\r\n              setTimer(plant?.timer);\r\n            }\r\n          }\r\n          break;\r\n        case \"watering-can\":\r\n          if (plantStatus != 2 && coinBankVal >= costWateringCan) {\r\n            soundWateringCan.load();\r\n            soundWateringCan.play();\r\n            setCoinBankVal(\r\n              coinBankVal - costWateringCan ? coinBankVal - costWateringCan : 0\r\n            );\r\n            setTimer(timer - timeWateringCan);\r\n            if (timeWateringCan > timer) {\r\n              setPlantStatus(plantStatus + 1);\r\n              setTimer(plant?.timer);\r\n            }\r\n          }\r\n          break;\r\n        case \"bug-spray\":\r\n          soundBugSpray.load();\r\n          soundBugSpray.play();\r\n          break;\r\n        case \"phonograph\":\r\n          soundPhonograph.load();\r\n          soundPhonograph.play();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else playSoundPause();\r\n  };\r\n  //\r\n  const sale = plant?.salePrice;\r\n  //\r\n  return (\r\n    <div\r\n      className=\"gd-garden-item\"\r\n      onClick={() => handleInteractWithPlant()}\r\n      onMouseEnter={() => {\r\n        setPlantOpacity(choosePlant?.image2);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setPlantOpacity(null);\r\n      }}\r\n    >\r\n      {plant && (\r\n        <Fragment>\r\n          <PlantImage\r\n            plant={plant}\r\n            plantStatus={plantStatus}\r\n            plantOpacity={plantOpacity}\r\n          />\r\n          {isPlanted && (\r\n            <>\r\n              <Timer plantStatus={plantStatus} timer={timer} />\r\n              <Coin plantStatus={plantStatus} sale={sale} />\r\n            </>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React, { memo } from \"react\";\r\nimport GardenItem from \"./GardenItem\";\r\n//\r\nexport default memo(function Garden({\r\n  plants,\r\n  choosePlant,\r\n  setPlant,\r\n  deletePlant,\r\n  tool,\r\n  coinBankVal,\r\n  setCoinBankVal,\r\n  costTreeFood,\r\n  costWateringCan,\r\n}) {\r\n  //\r\n  return (\r\n    <div className=\"gd-garden\">\r\n      {plants.map((plant, index) => (\r\n        <GardenItem\r\n          key={index}\r\n          plant={plant}\r\n          choosePlant={choosePlant}\r\n          setPlant={() => setPlant(index)}\r\n          deletePlant={() => deletePlant(index)}\r\n          tool={tool}\r\n          coinBankVal={coinBankVal}\r\n          setCoinBankVal={setCoinBankVal}\r\n          costTreeFood={costTreeFood}\r\n          costWateringCan={costWateringCan}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n"],"sourceRoot":""}